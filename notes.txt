
Allow event subscriptions

-------

Some tags should have its content parsed: if, each, out
Other tags are innert: comment, template?, ...

---------

{{if}}
	yaaata!
{{/if else}}
	Pfff...
{{/else}}


{{if 2 > 3}}
	yaaata!
{{elseif 2 = 2}}
	Pfff...
{{else}}
	Pfff...
{{/if}}

-------

// Should is be "each" or "for" ??

{{each this}}
	odd: {{out loop.current /}}
{{/each}}
{{every 2}}
	even: {{out loop.current /}}
{{/every}}
{{empty}}
	list is empty!
{{/empty}}

-------

// Should is be "each" or "for" ??

{{each this}}
	odd: {{out loop.current /}}
{{every 2}}
	even: {{out loop.current /}}
{{empty}}
	list is empty!
{{endeach}}

-----------

// output items in a var

{{each this.items, "parentItem"}}
	{{each this.children, "child"}}
		{{out var.parentItem.name /}} is parent of {{out var.child.name /}}
	{{/each}}
{{/each}}

or alternate syntax

{{each this.items @@ "parentItem"}}
	{{each this.children, "child"}}
		{{out var.parentItem.name /}} is parent of {{out var.child.name /}}
	{{/each}}
{{/each}}

or with decorator ?

{{each this.items >> var "parentItem"}}
	{{each this.children >> var "child"}}
		{{out var.parentItem.name /}} is parent of {{out var.child.name /}}
	{{/each}}
{{/each}}

same as :

{{each this.items}}
	{{define "parentItem", this /}}
	{{each this.children}}
		{{define "child", this /}}
		{{out var.parentItem.name /}} is parent of {{out var.child.name /}}
	{{/each}}
{{/each}}

-------

{{ firstof var1, var2, var3, "fallback value" /}}  from django

-------

/**
 * Loop 31 times, with alternate output every 2 items with 1 offset count
 */
 Or "repeat" ?
 Or {{each spawn(3) }} or similar ?

{{loop 31}}
	odd: {{out loop.current /}}
{{every 2, 1}}
	even: {{out loop.current /}}
{{/loop}}

----

{{cycle "odd", "even" }}  (like django)

-------
Define a variable using JSON and store as an object

{{var "messageCount" >> json /}}
	{
		a: 1,
		b: 2
	}
{{/var}}

-------
i18n could be a template global

{{out i18n("Bonjour à vous les amis!")/}}
{{out "Bonjour à vous les amis!" >> i18n /}}
{{i18n}}Bonjour à vous les amis!{{/i18n}}
{{i18n "bonjour"}}Bonjour à vous les amis!{{/i18n}}
{{out >> i18n "bonjourAvous"}}Bonjour à vous les amis!{{/i18n}}

------

More complete Loop object

forloop.counter 	The current iteration of the loop (1-indexed)
forloop.revcounter 	The number of iterations from the end of the loop (1-indexed)
forloop.first 	True if this is the first time through the loop
forloop.last 	True if this is the last time through the loop
forloop.parentloop 	For nested loops, this is the loop "above" the current one


------

{{macro "welcomeUser", "firstname", "lastname"}}
	<p>Welcome {{out args.firstname + " " + args.lastname /}}</p>
	<div style="padding:20px; border:1px solid;">
		{{out args.content /}}
	</div>
{{/macro}}

{{var "messageCount", 4 /}}
{{call "welcomeUser", this.firstname, this.lastname }}
	<p>You have {{out vars.messageCount /}} new messages in your inbox!</p>
{{/call}}

------

{{tag "welcomeUser"}}
	<p>
		Welcome {{out this.fullUsername //}
	</p>
{{/tag}}

{{welcomeUser user /}}

-----

Reusability tags:
{{load "templateName"}}
{{template "templateName"}}
{{include "templatenName" /}}
{{render data, "templateName" /}}
{{extend "templateName"}}

-------

